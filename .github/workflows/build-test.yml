name: 'build-test'

on: [pull_request, push]

jobs:
  build_and_unit_test:
    name: '${{ matrix.os }}: build and unit tests'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true
    - uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - run: |
        npm install
        npm run test
      name: build and test
      shell: bash

  tests:
    name: '${{ matrix.os }}: functional tests'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - name: checkout this action
      uses: actions/checkout@v1
      with:
        submodules: true

    - name: basic test for run-vcpkg
      uses: ./
      with:
        vcpkgDirectory: ${{ github.workspace }}/vcpkg
        vcpkgArguments: sqlite3
        vcpkgGitUrl: 'https://github.com/microsoft/vcpkg.git'
        vcpkgGitCommitId: '6185aa76504a5025f36754324abf307cc776f3da'
        useShell: true

    - name: basic test for run-vcpkg with setupOnly
      uses: ./
      with:
        vcpkgDirectory: ${{ github.workspace }}/vcpkg
        vcpkgArguments: sqlite3
        vcpkgGitUrl: 'https://github.com/microsoft/vcpkg.git'
        vcpkgGitCommitId: '6185aa76504a5025f36754324abf307cc776f3da'
        useShell: true
        setupOnly: true

    - name: overlay extraction test for run-vcpkg
      uses: ./
      with:
        vcpkgDirectory: ${{ github.workspace }}/vcpkg
        vcpkgArguments: '--overlay-ports=../__tests__/assets/1 sqlite3 @../__tests__/assets/tempDirectory/response_file1 --overlay-ports=../__tests__/assets/subdir/2 @../__tests__/assets/response_file2'
        vcpkgGitUrl: 'https://github.com/microsoft/vcpkg.git'
        vcpkgGitCommitId: '6185aa76504a5025f36754324abf307cc776f3da'
        useShell: true
